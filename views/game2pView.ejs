<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta http-equiv="Content-Type" content="text/html" charset="utf-8" />
    <meta name="keywords" content="steven lu, tetris, game, free, javascript, html5, browser, native, iOS, iPhone, iPad, iPad 2, Android, webkit, opera, chrome, touch, safari" />
    <meta name="description" content="This is a HTML5 tetris game that has wide browser support. It provides innovative intuitive touch controls for Apple iOS iPhone iPad products and also Android devices. " />

    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta names="apple-mobile-web-app-status-bar-style" content="black-translucent" />

    <title>Tetris!</title>

    <script src="/tetris_core/strokeText.js"></script>
    <link rel="stylesheet" href="/style/defaultStyle.css">

    <link href="https://fonts.googleapis.com/css?family=Ubuntu" rel="stylesheet">
    <link rel="stylesheet" href="/tetris_core/page.css" type="text/css" />
    <script src='/tetris_core/TetrisPlay2P.js' type="text/javascript"></script>

    <script src="/scripts/playOnServer.js"></script>
    <script>
        function gameQuitOnclick(){
            location.href="/game/quit";
        };
    </script>
    <style>
        .watingDiv{
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            background-color: rgba(0,172,167,1);
        }
        .watingText{
            font-family: 'Ubuntu', sans-serif;
            font-size: 5rem;
            color :rgba(255, 0, 44, 1);
            margin-bottom: 2rem;
            z-index: 7;
            animation: textAnimation 3s infinite;
            animation-timing-function: ease-in-out;
        }
        #effect{
            position: absolute;
            width: 20vw;
            height: 20vw;
            top:-10vw;
            right:-10vw;
            z-index: 5;
            border-radius: 1000px;
            background-color: rgba(0,172,167,1);
            animation: shrink 1.5s forwards;
            animation-play-state:paused;
        }
        #count{
            position: absolute;
            width: 200px;
            height: 200px;
            transform: translate(-100px,-100px);
            font-size: 10rem;
            text-align: center;
            top:50%;
            left:50%;
            z-index: 5;
            color: orange;
        }
        @keyframes shrink {
            0%{
                transform: scale(15,15);
            }
            100%{
                transform: scale(0,0);
            }
        }
        @keyframes textAnimation{
            0%{
                transform: scale(0.9,0.9);
            }
            50%{
                transform: scale(1.3,1.3);
            }
            100%{
                transform: scale(0.9,0.9);
            }
        }
    </style>
</head>

<body>
    <div id="effect"></div>
    <div id="count"></div>
    <div class="watingDiv">
        <div class="watingText">...Waiting...</div>
        <input type="button" id="quit" value="Quit" style="z-index: 7;" onclick="gameQuitOnclick()">
    </div>
    <div class="gameDiv">
        <!-- score -->
        <table id="opponent_check" class="styled-table">
            <thead>
                <tr>
                    <th>ID </th>
                    <td id="opponent_id"></td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th>SCORE </th>
                    <td id="opponent_score"></td>
                </tr>
            </tbody>
        </table>
        <table id="score_check" class="styled-table">
            <thead>
                <tr>
                    <th>ID </th>
                    <td id="player_id"></td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th>SCORE </th>
                    <td id="player_score"></td>
                </tr>
            </tbody>
        </table>
        <!-- canvas -->
        <div id="opponent">
            <canvas id="opponent_board" width="500" height="1200"></canvas>
        </div>
        <div id="player">
            <canvas id="player_board" width="500" height="1200"></canvas>
            <canvas id="player_shadow" width="500" height="1200"></canvas>
            <canvas id="player_animated" width="500" height="1200"></canvas>
        </div>

        <!-- pause -->
        <div id="instructions" style="position: relative">
            <input type="button" id="quit" value="Quit" onclick="gameQuitOnclick()">
        </div>
    </div>
    <script>
        let watingDiv = document.getElementsByClassName('watingDiv')[0];
        let gameDiv = document.getElementsByClassName('gameDiv')[0];
        const args = [{"board" : board},null];
        gameDiv.style.display = 'none';
        playOnServer((callback_args)=>{
            switch(callback_args['status']){
                case ('gaming'):
                    const effect = document.getElementById('effect');
                    effect.style.animationPlayState="running";
                    watingDiv.innerHTML = callback_args['msg'];
                    watingDiv.style.display = 'none';
                    gameDiv.style.display = 'block';
                    document.getElementById('opponent_id').innerHTML=callback_args["opponent"];              
                    document.getElementById('player_id').innerHTML=callback_args["userid"];
                    const count = document.getElementById('count');
                    let i=2;
                    count.innerText = 1;
                    const timerid = setInterval(()=>{
                        if (i == 4) {
                            clearInterval(timerid);
                            count.innerText = '';
                        }
                        else{
                            count.innerText = i;
                            i += 1;
                        }
                    },1000);
                    setTimeout(()=>{
                        TETRIS.unPause();
                        TETRIS.setScoreIncreasing();
                    },3000)
                     break;
                case ('join fail'):
                    gameQuitOnclick();
                     break;
                case ('updated'):
                    let data = callback_args['data'];
                    if (data !== null){
                        DrawOpponent(data['isOver'],data['score'],data['board']);
                        args[0] = {
                            "board" : board,
                            "score" : player_score,
                            "isOver" : player_over,
                        };
                    }
                     break;
                case ('opponent disconnected'):
                    DrawOpponent(true,0,null);
                    //gameQuitOnclick();
                     break;
                case ('match ended'):
                    DrawOpponent(true,0,null);
                    //gameQuitOnclick();
                     break;
                default:
                    break;         
            }
        },args,100);
    </script>
</body>

</html>
